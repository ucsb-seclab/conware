#!/usr/bin/env python

# Native
import argparse
import os
import sys
import logging

# Conware
import time

from conware.model import PretenderModel
from conware import *

logger = logging.getLogger(__name__)

# Increase our recursion limit

if __name__ == "__main__":
    # Get user input
    parser = argparse.ArgumentParser()
    parser.add_argument("model",
                        help="Path to initial model.")
    parser.add_argument("merge_model",
                        help="Path to model to merge into initial model.")
    parser.add_argument("--output", "-o", type=str,
                        default=None,
                        help="Name of output file to create merged model. "
                             "Otherwise the initial model will be overwritten.")
    parser.add_argument("--debug", "-d", default=False, action='store_true',
                        help="Enable debug output.")
    args = parser.parse_args()

    # Setup Logging
    if args.debug:
        logging.basicConfig(level=logging.DEBUG)
    else:
        logging.basicConfig(level=logging.INFO)

    if not os.path.exists(args.model):
        logger.error("Model file (%s) does not exist.", args.model)
        parser.print_help()
        sys.exit(0)
    if not os.path.exists(args.merge_model):
        logger.error("Model file (%s) does not exist.", args.merge_model)
        parser.print_help()
        sys.exit(0)

    logger.info("Importing model file (%s)..." % args.model)
    model = PretenderModel(filename=args.model)
    logger.info("Importing model file (%s)..." % args.merge_model)
    merge_model = PretenderModel(filename=args.merge_model)

    start_time = time.time()
    for peripheral2 in merge_model.peripherals:

        # Does it equal a peripheral that exists in model?
        for peripheral in model.peripherals:
            if peripheral == peripheral2:
                logger.info("Merging %s..." % str(peripheral.name))
                peripheral.merge(peripheral2)

        # Is this a new peripheral that we need to add?
        if peripheral2 not in model:
            logger.info("Adding peripheral %s..." % str(peripheral2.name))
            model.add_peripheral(peripheral2)

    logger.info("Done! Took %f seconds." % (time.time()-start_time))
    if args.output is None:
        merged_filename = args.model
    else:
        merged_filename = args.output
    logger.info("Saving merged model to %s" % merged_filename)

    # TODO: Update to actually save
    model.save(merged_filename)
