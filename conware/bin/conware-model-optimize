#!/usr/bin/env python

# Native
import argparse
import fnmatch
import os
import cProfile

import sys

from networkx.drawing.nx_agraph import to_agraph

sys.path.append("/home/graham/Desktop/conware/conware/")

import logging

from conware.model import PretenderModel
from conware import *
import pickle

import networkx

logger = logging.getLogger(__name__)


# Increase our recursion limit
sys.setrecursionlimit(3000)


if __name__ == "__main__":
    # Get user input
    parser = argparse.ArgumentParser()
    parser.add_argument("recording_dir",
                        help="Directory containing all of the log files.")
    parser.add_argument("--debug", "-d", default=False, action='store_true',
                        help="Enable debug output.")
    args = parser.parse_args()

    # Setup Logging
    if args.debug:
        logging.basicConfig(level=logging.DEBUG)
    else:
        logging.basicConfig(level=logging.INFO)

    if not os.path.exists(args.recording_dir):
        parser.print_help()
        sys.exit(0)

    model_file = os.path.join(args.recording_dir, MODEL_FILE)
    if not os.path.exists(model_file):
        logger.error("Model file (%s) does not exist.", model_file)
        parser.print_help()
        sys.exit(0)

    logger.info("Importing model file (%s)..." % model_file)
    model = PretenderModel(filename=model_file)

    for peripheral in model.peripherals:
        logger.info("Optimizing %s..." % str(peripheral.name))

        peripheral.optimize2()
        #cProfile.run('peripheral.optimize2()')

    optimized_filename = os.path.join(args.recording_dir, MODEL_FILE_OPTIMIZED)
    logger.info("Saving optimized model to %s" % optimized_filename)

    model.save(optimized_filename)
